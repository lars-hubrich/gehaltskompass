name: Linting, Formatting & Testing

on: [ push ]

jobs:
  linting_and_formatting:
    name: Linting & Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run formatting
        run: npm run format:check

  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests with coverage
        run: npm run test:coverage

      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Publish unit test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: unit-tests
          path: test-results/jest/junit.xml
          reporter: jest-junit

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Dependencies
        run: npm ci

      - name: Run Prisma Generate
        run: npx prisma generate

      - name: Run Prisma DB Push
        run: npx prisma db push --accept-data-loss

      - name: Run Cypress E2E Tests
        uses: cypress-io/github-action@v6.9.0
        with:
          start: npm run dev
          wait-on: http://localhost:3000
          wait-on-timeout: 60
          command: npm run e2e:run

      - name: Publish e2e test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: e2e-tests
          path: test-results/cypress/*.xml
          reporter: java-junit

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs:
      - linting_and_formatting
      - unit
      - e2e
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=${{ github.ref_name }}
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
