generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "sqlite" // for local testing purposes
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  statements statement[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model statement {
  id    String @id
  month Int
  year  Int

  user_id String
  user    User   @relation(fields: [user_id], references: [id])

  incomes income[]

  brutto_tax Float
  brutto_av  Float
  brutto_pv  Float
  brutto_rv  Float
  brutto_kv  Float

  deduction_tax_income     Float
  deduction_tax_church     Float
  deduction_tax_solidarity Float
  deduction_tax_other      Float

  social_av Float // Arbeitslosenversicherung
  social_pv Float // Pflegeversicherung
  social_rv Float // Rentenversicherung
  social_kv Float // Krankenversicherung

  payout_netto    Float
  payout_transfer Float
  payout_vwl      Float
  payout_other    Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("salaries")
}

model income {
  id         Int       @id @default(autoincrement())
  salary_id  String
  statement  statement @relation(fields: [salary_id], references: [id])
  name       String
  identifier String
  value      Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("income")
}
